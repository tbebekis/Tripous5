<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebDesk.Lib</name>
    </assembly>
    <members>
        <member name="T:WebDesk.AspNet.AppRazorPage`1">
            <summary>
            View page class used by this application
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.AppRazorPage`1.L(System.String,System.Object[])">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and the current (Session's) culture code, e.g. el-GR
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.AppRazorPage`1.GS(System.String,System.Object[])">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and the current (Session's) culture code, e.g. el-GR
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.AppRazorPage`1.ToHtml(System.String,System.Object[])">
            <summary>
            Returns a string as an <see cref="T:Microsoft.AspNetCore.Html.HtmlString"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.AppRazorPage`1.ImageUrl(System.String)">
            <summary>
            Returns the path url of an image of a theme, e.g. ~/themes/THEME/Content/images/IMAGE.png
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.AbsoluteUrlEncoded">
            <summary>
            Returns the absolute Url of this page, along with the Query String, encoded.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.RelativeUrlEncoded">
            <summary>
            Returns the relative Url of this page, along with the Query String, encoded.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.RelativeRawUrlEncoded">
            <summary>
            Returns the relative Url of this page, along with the Query String, encoded.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.ViewFilePath">
            <summary>
            Return the file path of the view
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.ViewFileName">
            <summary>
            Returns the file name of the view
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.PageTitle">
            <summary>
            Gets or sets the title of the page
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.AppRazorPage`1.PageDescription">
            <summary>
            Gets or sets the description of the page
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.DisabledAttribute">
            <summary>
            Marks a model property as disabled. Results in a disabled html attribute.
            <para>NOTE: Used by <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> custom tag helper.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.DisabledAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.DisabledAttribute.ClassName">
            <summary>
            The class name of the attribute.
            <para>NOTE: <see cref="T:WebDesk.AspNet.IModelAttribute"/> implementation. </para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.ElementIdGenerator">
            <summary>
            Generates unique Ids for HTML elements.
            <para>WARNING: HTML element id is case-sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.ElementIdGenerator.GetNextId(System.String)">
            <summary>
            Generates and returns a unique id for an HTML Element.
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.HtmlTag">
            <summary>
            A slightly better (I hope) <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> that supports nested tags.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.ToString">
            <summary>
            Returns a string representation of this instance
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Add(System.String,System.String)">
            <summary>
            Adds a tag to the <see cref="P:WebDesk.AspNet.HtmlTag.InnerTags"/> and returns the newly added <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Add(WebDesk.AspNet.HtmlTag)">
            <summary>
            Adds a tag to the <see cref="P:WebDesk.AspNet.HtmlTag.InnerTags"/> and returns the newly added <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.AddInput(System.String,System.String)">
            <summary>
            Adds a tag to the <see cref="P:WebDesk.AspNet.HtmlTag.InnerTags"/> and returns the newly added <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Attribute(System.String,System.String)">
            <summary>
            Adds a new attribute or replaces an existing one, if the specified key is not null or empty. Returns this instance.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Class(System.String)">
            <summary>
            Adds one or more class names, delimited by a space, to the tag's css classes, if the specified class names is not a null or empty string. Returns this instance.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Writes the tag by encoding it with the specified encoder to the specified  writer.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Div(System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Button(System.String,System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Submit(System.String,System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Reset(System.String,System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Span(System.String,System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Label(System.String,System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Hidden">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.TextBox(System.String)">
            <summary>
            Creates and returns a new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.HtmlTag.Input(System.String,System.String)">
            <summary>
            Creates and returns an input tag
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.HtmlTag.InnerTags">
            <summary>
            The list of inner tags
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.IModelAttribute">
            <summary>
            A custom model attribute.
            <para>See <see cref="T:WebDesk.AspNet.TagHelperModelMetadataProvider"/> for usage instructions. </para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.IModelAttribute.ClassName">
            <summary>
            The class name of the attribute
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.IntBoolAttribute">
            <summary>
            Marks a model integer property to be used as a boolean and display an html checkbox when rendered.
            <para>NOTE: Used by <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> custom tag helper.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IntBoolAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.IntBoolAttribute.ClassName">
            <summary>
            The class name of the attribute.
            <para>NOTE: <see cref="T:WebDesk.AspNet.IModelAttribute"/> implementation. </para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.IWebAppCache">
            <summary>
            Represents an application memory cache.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.ContainsKey(System.String)">
            <summary>
            Returns true if the key exists.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Remove(System.String)">
            <summary>
            Removes an entry by a specified key.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Set``1(System.String,``0)">
            <summary>
            Sets an entry under a specified key. Creates the entry if not already exists.
            <para>If is a new entry it will be removed from the cache after <see cref="P:WebDesk.AspNet.IWebAppCache.DefaultEvictionTimeoutMinutes"/> minutes. </para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Set``1(System.String,``0,System.Int32)">
            <summary>
            Sets an entry under a specified key. Creates the entry if not already exists.
            <para>If is a new entry it will be removed from the cache after the specified timeout minutes. </para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns true if an entry exists under a specified key. Returns the value too as out parameter.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.TryGetValue``1(System.String,``0@)">
            <summary>
            Returns true if an entry exists under a specified key. Returns the value too as out parameter.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get``1(System.String)">
            <summary>
            Returns a value found under a specified key, if any, else returns the default value of the specified type argument.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get(System.String)">
            <summary>
            Returns a value found under a specified key, if any, else returns null.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Pop``1(System.String)">
            <summary>
            Removes and returns a value found under a specified key, if any, else returns the default value of the specified type argument.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Pop(System.String)">
            <summary>
            Removes and returns a value found under a specified key, if any, else returns null.
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get(System.String,System.Func{System.Object})">
            <summary>
            Returns a value found under a specified key.
            <para>If the key does not exist, it calls the specified loader call-back function </para>
            <para>The loader function should be defined as <c>object LoaderFunc()</c></para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get(System.String,System.Func{System.ValueTuple{System.Int32,System.Object}})">
            <summary>
            Returns a value found under a specified key.
            <para>If the key does not exist, it calls the specified loader call-back function </para>
            <para>The loader function should be defined as <c>(int, object) LoaderFunc().</c></para>
            <para>The loader function must return a tuple where the first value is the eviction timeout and the second is the result object.</para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get``1(System.String,System.Func{``0})">
            <summary>
            Returns a value found under a specified key.
            <para>If the key does not exist, it calls the specified loader call-back function </para>
            <para>The loader function should be defined as <c>T LoaderFunc&lt;T&gt;()</c></para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.IWebAppCache.Get``1(System.String,System.Func{System.ValueTuple{System.Int32,``0}})">
            <summary>
            Returns a value found under a specified key.
            <para>If the key does not exist, it calls the specified loader call-back function </para>
            <para>The loader function should be defined as <c>(int, T) LoaderFunc&lt;T&gt;().</c></para>
            <para>The loader function must return a tuple where the first value is the eviction timeout and the second is the result object.</para>
            <para>NOTE: Key is case sensitive.</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.IWebAppCache.DefaultEvictionTimeoutMinutes">
            <summary>
            The default eviction timeout of an entry from the cache, in minutes. Defaults to 0 which means "use the timeouts of the internal implementation".
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.ModelValidationFilter">
            <summary>
            Global filter for throwing an exception when a model with invalid state comes to a controller action.  
            <para>To register</para>
            <para><code> services.AddControllersWithViews(o =&gt; { o.Filters.Add&lt;ModelValidationFilter&gt;(); })
            </code></para>
            </summary>    
        </member>
        <member name="M:WebDesk.AspNet.ModelValidationFilter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.ModelValidationFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action executes, after model binding is complete.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.ModelValidationFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Called after the action executes, before the action result.
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.PlaceholderAttribute">
            <summary>
            Marks a model property as disable. Results in a disabled html attribute
            <para>NOTE: Used by <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> custom tag helper.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.PlaceholderAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.PlaceholderAttribute.Key">
            <summary>
            The resource string key
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.PlaceholderAttribute.Text">
            <summary>
            The localized placeholder text
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.PlaceholderAttribute.ClassName">
            <summary>
            The class name of the attribute.
            <para>NOTE: <see cref="T:WebDesk.AspNet.IModelAttribute"/> implementation. </para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.RequiredExAttribute">
            <summary>
            Extension for the Required attribute
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.RequiredExAttribute.FormatErrorMessage(System.String)">
            <summary>
            Applies formatting to an error message based on the data field where the error occurred.
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.Session">
            <summary>
            Provides access to session variables (entries)
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Get``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            Returns a value stored in session, found under a specified key or a default value if not found.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Get``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)">
            <summary>
            Returns a value stored in session, found under a specified key or a default value if not found.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Set``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)">
            <summary>
            Stores a value in session under a specified key.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Get``1(System.String)">
            <summary>
            Returns a value stored in session, found under a specified key or a default value if not found.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Get``1(System.String,``0)">
            <summary>
            Returns a value stored in session, found under a specified key or a default value if not found.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Set``1(System.String,``0)">
            <summary>
            Stores a value in session under a specified key.
            <para>NOTE: Key is NOT case sensitive.</para>
            <para>WARNING: Whenever an object is added by calling Set(), the object is serialized.
            So adding the object first and then altering the object will NOT work.
            The object should be added after any alteration to it is done.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Pop``1(System.String)">
            <summary>
            Removes and returns a value found under a specified key, if any, else returns the default value of the specified type argument.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.GetString(System.String)">
            <summary>
            Returns a string stored in session, found under a specified key or null if not found.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.SetString(System.String,System.String)">
            <summary>
            Stores a string value in session under a specified key.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Clear">
            <summary>
            Clears all session variables
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.Remove(System.String)">
            <summary>
            Removes a session variable under a specified key.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.Session.ContainsKey(System.String)">
            <summary>
            Returns true if a variable exists in session under a specified key.
            <para>NOTE: Key is NOT case sensitive.</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.Session.Request">
            <summary>
            Provides acces to request variables.
            <para>This dictionary is used to store data while processing a single request. The dictionary's contents are discarded after a request is processed.</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.Session.Language">
            <summary>
            Gets or sets the current language of the session.
            <para>Represents a language this application supports, i.e. provides localized resources for.</para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TagHelperAspForBase">
            <summary>
            A <see cref="T:WebDesk.AspNet.TagHelperBase"/> descendant class.
            <para>For use with asp-for tag helpers, i.e. tag helpers the render a model's property or a full model.</para>
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperAspForBase.SFor">
            <summary>
            Constant
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperAspForBase.HtmlAttributes">
            <summary>
            container for additional attributes
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperAspForBase.Initialize(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Initializes the helper.
            <para>CAUTION: Should be called by the first line in <c>Process()</c> or <c>ProcessAsync()</c> method </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperAspForBase.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperAspForBase.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)">
            <summary>
            Initializes the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"/> with the given <paramref name="context"/>. Additions to
            <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext.Items"/> should be done within this method to ensure they're added prior to
            executing the children.
            <para>NOTE: This method is called automatically by .Net</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.For">
            <summary>
            The expression passed to the tag helper. Usually this is a model's property or the full model
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.PropertyValue">
            <summary>
            The value of the property, this instance represents, in the current model.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.PropertyType">
            <summary>
            The <see cref="T:System.Type"/> of model's property
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.PropertyMetadata">
            <summary>
            Property metadata.
            <para> In order to get all attributes, built-in and custom, typecast Metadata to DefaultModelMetadata. </para>
            <para> For another technique of getting just the custom attributes marking the property see the <see cref="T:WebDesk.AspNet.TagHelperModelMetadataProvider"/> class </para>
            <para> see also: https://github.com/aspnet/Mvc/issues/4597 </para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.PropertyAttributes">
            <summary>
            The list of CSharp attributes marking the model property
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.FullName">
            <summary>
            Fully-qualified expression name for the specified partialFieldName in the <see cref="P:WebDesk.AspNet.TagHelperAspForBase.For"/> <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/>.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.HasErrors">
            <summary>
            True when the property value is invalid, after a POST
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperAspForBase.Errors">
            <summary>
            Message regarding the errors or null.
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TagHelperBase">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper"/> descendant class
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.CreateMainTag">
            <summary>
            Creates and assigns the <see cref="P:WebDesk.AspNet.TagHelperBase.MainTag"/> that is the main <see cref="T:WebDesk.AspNet.HtmlTag"/> containing all output markup.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.Initialize(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Initializes the helper.
            <para>CAUTION: Should be called by the first line in <c>Process()</c> or <c>ProcessAsync()</c> method </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.NextId(System.String)">
            <summary>
            Generates and returns a unique id for an HTML Element.
            <para>WARNING: HTML element id is case-sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.Init(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext)">
            <summary>
            Initializes the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper"/> with the given <paramref name="context"/>. Additions to
            <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext.Items"/> should be done within this method to ensure they're added prior to
            executing the children.
            <para>NOTE: This method is called automatically by .Net</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperBase.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Executes the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper"/> a-synchronously.
            <para>NOTE: It calls <see cref="M:WebDesk.AspNet.TagHelperBase.Initialize(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)"/> too. </para>
            <para>The .Net (Asp.Net Core 3.0) framework calls the <see cref="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)"/> which calls the synchronous <c>Process()</c> in turn </para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.MainTag">
            <summary>
            The main <see cref="T:WebDesk.AspNet.HtmlTag"/> containing all output markup.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.HtmlHelper">
            <summary>
            Html helper
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.Generator">
            <summary>
            Helper. Generates html form elements and more.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.TagHelperContext">
            <summary>
            A <see cref="P:WebDesk.AspNet.TagHelperBase.TagHelperContext"/> instance as passed to the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper"/> <c>Process()</c> method.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.Output">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput"/> instance as passed to the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper"/> <c>Process()</c> method.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.ViewContext">
            <summary>
            View context already contextualized.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.OutputAttributes">
            <summary>
            A dictionary of html attributes already defined by the user in the html markup
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperBase.Params">
            <summary>
            Custom parameteres.
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TagHelperControlRow">
            <summary>
            Renders an editor control, that is an editable control.
            </summary> 
        </member>
        <member name="T:WebDesk.AspNet.TagHelperControlRow.EditorType">
            <summary>
            The type of the editor (HTML control)
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperControlRow.EditorType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperControlRow.EditorType.CheckBox">
            <summary>
            CheckBox
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperControlRow.EditorType.TextArea">
            <summary>
            TextArea
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.TagHelperControlRow.EditorType.ComboBox">
            <summary>
            ComboBox
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperControlRow.GetEditorType">
            <summary>
            Returns the editor type of the current HTML tag
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperControlRow.CreateMainTag">
            <summary>
            Creates and assigns the  the main <see cref="T:WebDesk.AspNet.HtmlTag"/> containing all output markup.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperControlRow.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperControlRow.ApplyPropertyAttributes(System.Collections.Generic.IReadOnlyList{System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Applies property annotation attributes to the specified html attributes dictionary.
            <para>Later on that html attributes dictionary entries are merged into the output control html attributes. </para>
            </summary>
            <param name="PropertyAttributes">A list of CSharp attributes marking the model property</param>
            <param name="HtmlAttributes">An html attributes dictionary. Later on that html attributes dictionary entries are merged into the output control html attributes. </param>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperControlRow.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)">
            <summary>
            Synchronously executes the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper"/> with the a specified context and output.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperControlRow.RowId">
            <summary>
            Optional. Defaults to empty string. The Id of the control row.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperControlRow.RowClass">
            <summary>
            Optional. Defaults to empty string. The css class(es) of the control row.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperControlRow.DefaultItem">
            <summary>
            Optional. Defaults to empty string. When is not empty then this text is added as the default option item to a combo box editor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperControlRow.Items">
            <summary>
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TagHelperControlRow.Template">
            <summary>
            The editor template
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TagHelperExtensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.ToHtml(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Returns the encoded html text of a tag
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.InnerHtmlToString(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Returns the inner html of a specified tag as string
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.WriteTo(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder,System.Nullable{Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode})">
            <summary>
            Writes the tag by encoding it with the specified encoder to the specified  writer.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.WriteAttributesTo(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Writes tag's attributes by encoding them with the specified encoder to the specified  writer.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.RemoveCssClasses(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Removes all css classes from a specified tag
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.RemoveClientDataValidationAttributes(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Removes all the data-val-* attributes Asp.Net Core sets to a specified tag.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperExtensions.Clone(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Clones a source tag and returns the new <see cref="T:WebDesk.AspNet.HtmlTag"/>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TagHelperModelMetadataProvider">
            <summary>
            A metadata provider that adds custom attributes to a model's metadata.
            <para>Those attributes can be retrieved later. For an example see <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> </para>
            <para>For the retrieval to work, this provider should be registered in <c>ConfigureServices()</c> as </para>
            <para> <c>MvcBuilder.AddMvcOptions(o => o.ModelMetadataDetailsProviders.Add(new ModelMetadataProvider()));</c> </para>
            <para>To retrieve the attribute from inside a TagHelper use the following  </para>
            <para><c> if (For.Metadata.AdditionalValues.TryGetValue(nameof(MyCustomAttribute), out object value)) {...}</c></para>
            <para>See Also: https://github.com/aspnet/Mvc/issues/4597 </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TagHelperModelMetadataProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <summary>
            Sets the additional values for a <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.DisplayMetadata"/>  
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TextAreaAttribute">
            <summary>
            Marks a model property as disable. Results in a disabled html attribute
            <para>NOTE: Used by <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> custom tag helper.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TextAreaAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TextAreaAttribute.Rows">
            <summary>
            The rows
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TextAreaAttribute.Cols">
            <summary>
            The columns
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TextAreaAttribute.ClassName">
            <summary>
            The class name of the attribute.
            <para>NOTE: <see cref="T:WebDesk.AspNet.IModelAttribute"/> implementation. </para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.TitleAttribute">
            <summary>
            A localizable <see cref="T:System.ComponentModel.DisplayNameAttribute"/> attribute, to be used with model properties
            <para>NOTE: Used by <see cref="T:WebDesk.AspNet.TagHelperControlRow"/> custom tag helper.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.TitleAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TitleAttribute.Key">
            <summary>
            The resource string key
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TitleAttribute.DisplayName">
            <summary>
            The localized text.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.TitleAttribute.ClassName">
            <summary>
            The class name of the attribute.
            <para>NOTE: <see cref="T:WebDesk.AspNet.IModelAttribute"/> implementation. </para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.WebExtensions">
            <summary>
            Extensions
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetModelInvalidStateEntries(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            Returns a collection of Key/Value pairs where Key is the Property Name of the current Model and Value a Model error, if any.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetErrorList(Microsoft.AspNetCore.Mvc.ControllerBase,System.Object,System.Collections.Generic.List{System.String}@,System.Boolean,System.Func{System.Collections.Generic.Dictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}})">
            <summary>
            Returns true if a specified model state is invalid, along with a string list of errors.
            <para>The returned list contains the display (localized) names of the invalid properties, along with property names.</para>
            <para>If specified then enhances the model state errors with the new error strings.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetErrorList(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Collections.Generic.List{System.String}@)">
            <summary>
            Returns true if a specified model state is invalid, along with a string list of errors
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetErrorList(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Returns a string list of an invalid model state
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetErrorsHtmlText(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Returns the errors of an invalid model state as a UL list
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetErrorsText(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Returns the errors of an invalid model state as plain text lines
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.GetAttribute``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression)">
            <summary>
            Returns an <see cref="T:System.Attribute"/> instance that marks a Model's property, if there, else null.
            <para>NOTE: Assumes that <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Metadata"/> is a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/> instance. </para>
            <para>The <c>DefaultModelMetadata.Attributes.Attributes</c> collection contains all <see cref="T:System.Attribute"/>s marking the property, either custom or built-in.</para>
            <para>NOTE 2: The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Metadata"/>.ValidatorMetadata contains only validation <see cref="T:System.Attribute"/>s </para>
            <para>See Also: https://github.com/aspnet/Mvc/issues/4597 </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.IsIntegerType(System.Type)">
            <summary>
            Returns true if a specified type is an integer type, i.e. Byte, SByte, Int16, Int32, Int64, UInt16, UInt32, UInt64
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.NextId(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Generates and returns a unique id for an HTML Element.
            <para>WARNING: HTML element id is case-sensitive.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WebExtensions.NextId(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Generates and returns a unique id for an HTML Element.
            <para>WARNING: HTML element id is case-sensitive.</para>
            </summary>
        </member>
        <member name="T:WebDesk.AspNet.WSys">
            <summary>
            Helper
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.WSys.MobileCheck">
            <summary>
            FROM: https://stackoverflow.com/questions/13086856/mobile-device-detection-in-asp-net
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.WSys.MobileVersionCheck">
            <summary>
            FROM: https://stackoverflow.com/questions/13086856/mobile-device-detection-in-asp-net
            </summary>
        </member>
        <member name="F:WebDesk.AspNet.WSys.CrawlerCheck">
            <summary>
            FROM: https://stackoverflow.com/questions/7576508/how-to-detect-crawlers-in-asp-net-mvc
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetService``1">
            <summary>
            Returns a service specified by a type argument. If the service is not registered an exception is thrown.
            <para>WARNING: "Scoped" services can NOT be resolved from the "root" service provider. </para>
            <para>There are two solutions to the "Scoped" services problem:</para>
            <para> ● Use <c>HttpContext.RequestServices</c>, a valid solution since we use a "Scoped" service provider to create the service,  </para>
            <para> ● or add <c> .UseDefaultServiceProvider(options => options.ValidateScopes = false)</c> in the <c>CreateHostBuilder</c>() of the Program class</para>
            <para>see: https://github.com/dotnet/runtime/issues/23354 and https://devblogs.microsoft.com/dotnet/announcing-ef-core-2-0-preview-1/ </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.ReplaceService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Replaces one service with another
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetActionContext">
            <summary>
            Returns the current <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.
            <para>WARNING: It should be called only when a valid <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> exists. </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetUrlHelper">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.
            <para>WARNING: It should be called only when a valid <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> exists. </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.AddSqlStores(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            <para>After calling this method the <see cref="P:Tripous.Data.Db.Connections"/> is loaded from the appsettings.json file with Sql database connection information. </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetGoogleMapQueryUrl(System.String,System.Boolean,System.Int32)">
            <summary>
            Returns a Google Maps Url for a specified Query, for either a normal Map view or Sattelite view and a specified Zoom (1 to 20)
            <para>Query could be a full address or just a City or a Company name and City or any other combination.</para>
            <para>EXAMPLE: 1600 Pennsylvania Avenue; NW Washington, D.C. 20500 </para>
            <para>EXAMPLE: White House, Washington</para>
            <para>EXAMPLE: Baufox, Ηπείρου, Καλοχώρι, Θεσσαλονίκη, TK 57009 </para>
            <para>EXAMPLE: Baufox, Αθήνα</para>
            <para>Query could also have the format loc:LATITUDE+LONGTITUDE </para>
            <para>EXAMPLE: loc:40.62641513792309+22.948322824856376 </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetQueryValue(System.String,System.String)">
            <summary>
            Returns a value from query string, if any, else returns a default value.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetQueryValue(System.String,System.Int32)">
            <summary>
            Returns a value from query string, if any, else returns a default value.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetQueryValue(System.String,System.Boolean)">
            <summary>
            Returns a value from query string, if any, else returns a default value.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetQueryValueArray(System.String)">
            <summary>
            Returns the value of a query string parameter.
            <para>NOTE: When a parameter is included more than once, e.g. ?page=1&amp;page=2 then the result will be 1,2 hence this function returns an array.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.ContainsClaim(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
            <summary>
            Returns true if a claim exists in a sequence of claims
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.FindClaim(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
            <summary>
            Finds and returns a claim, if a claim exists in a sequence of claims, else null.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetClaimValue(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)">
            <summary>
            Returns the value of a claim, if a claim exists in a sequence of claims, else null.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.Localize(System.String)">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and the culture code of the current request, e.g. el-GR
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.CreateHttpClient">
            <summary>
            Creates and returns a <see cref="T:System.Net.Http.HttpClient"/> using a <see cref="T:System.Net.Http.IHttpClientFactory"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetFileContentResult(System.String,System.Byte[])">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for downloading a file or null.
            <para>Null is returned when no data is passed (null or length = 0) and the file does not exist.</para>
            <para>NOTE: If no binary Data is specified then the function tries to load the binary data from the specified file path. </para>
            <para>CAUTION: FilePath is mandatory.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetFileContentResult(System.String,System.IO.Stream)">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for downloading a file or null.
            <para>Null is returned when no data is passed (null or length = 0) and the file does not exist.</para>
            <para>NOTE: If no binary Data is specified then the function tries to load the binary data from the specified file path. </para>
            <para>CAUTION: FilePath is mandatory.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetHttpHeader(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            Reads and returns an HTTP header from <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Headers"/>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetReferrerUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the referrer Url if any, else null.
            <para>NOTE: The HTTP referer is an optional HTTP header field that identifies the address of the webpage which is linked to the resource being requested. 
            By checking the referrer, the new webpage can see where the request originated</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetClientIpAddress(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the client IP address, that is the IP address of the visitor, if any, else null
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetHostDomainName(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the domain name of the server and the TCP port number on which the server is listening. 
            The port number may be omitted if the port is the standard port for the service requested. 
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetRequestProtocol(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the scheme of the current request, i.e. https or http
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetRelativeRawUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the raw relative Url path and query string of a specified request
            <note>SEE: https://stackoverflow.com/questions/28120222/get-raw-url-from-microsoft-aspnet-http-httprequest </note>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetRelativeRawUrlEncoded(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the relative Url of a request, along with the Query String, url-encoded.
            <note>SEE: https://stackoverflow.com/questions/28120222/get-raw-url-from-microsoft-aspnet-http-httprequest </note>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetAbsoluteUrlEncoded(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the absolute Url of a request, along with the Query String, url-encoded.
            <para>Suitable for use in HTTP headers and other HTTP operations.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetAbsoluteDisplayUrl(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the combined components of the request URL in a fully un-escaped form (except for the QueryString) suitable only for display. 
            <para>This format should not be used in HTTP headers or other HTTP operations.</para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.GetAbsoluteRouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Returns the absolute Url (e.g. containing scheme and host name) of a specified Route name
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.UrlEncode(System.String)">
            <summary>
            Encodes a URL string.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.UrlEscape(System.String)">
            <summary>
            Escapes a url using the <see cref="M:System.Uri.EscapeUriString(System.String)"/>.
            <para>The <see cref="M:System.Uri.EscapeUriString(System.String)"/> escapes unreserved characters only..</para>
            <para>The <see cref="M:System.Uri.EscapeDataString(System.String)"/> escapes unreserved AND reserved charactes.</para>
            <para>Reserved Characters: :/?#[]@!$&amp;'()*+,;=  </para>
            <para>Unreserved Characters: alphanumeric and -._~ </para>
            <para>SEE: https://tools.ietf.org/html/rfc3986#section-2 </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.UrlEscapeAll(System.String)">
            <summary>
            Escapes a url using the <see cref="M:System.Uri.EscapeDataString(System.String)"/>.
            <para>The <see cref="M:System.Uri.EscapeUriString(System.String)"/> escapes unreserved characters only..</para>
            <para>The <see cref="M:System.Uri.EscapeDataString(System.String)"/> escapes unreserved AND reserved charactes.</para>
            <para>Reserved Characters: :/?#[]@!$&amp;'()*+,;= </para>
            <para>Unreserved Characters: alphanumeric and -._~ </para>
            <para>SEE: https://tools.ietf.org/html/rfc3986#section-2 </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.IsHttps(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns true if the RequestScheme is https.
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.IsLocalRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets whether the specified HTTP request URI references the local host.
            </summary>
            <param name="R">HTTP request</param>
            <returns>True, if HTTP request URI references to the local host</returns>
        </member>
        <member name="M:WebDesk.AspNet.WSys.IsAjax(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns true if a specified request is an ajax request
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.IsMobile(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns true if we are dealing with a mobile device/browser
            <para>FROM: https://stackoverflow.com/questions/13086856/mobile-device-detection-in-asp-net </para>
            </summary>
        </member>
        <member name="M:WebDesk.AspNet.WSys.IsCrawler(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns true if we are dealing with a search endine bot.
            <para>FROM: https://stackoverflow.com/questions/7576508/how-to-detect-crawlers-in-asp-net-mvc  </para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.BaseUrl">
            <summary>
            Returns the base url of this application.
            <para>CAUTION: There should be a valid HttpContext in order to be able to return the base url.</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.RootPath">
            <summary>
            The physical "root path", i.e. the root folder of the application
            <para> e.g. C:\MyApp</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.WebRootPath">
            <summary>
            The physical "web root" path, i.e. the path to the "wwwroot" folder
            <para>e.g. C:\MyApp\wwwwroot</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.BinPath">
            <summary>
            The physical path of the \bin folder
            <para>e.g. C:\MyApp\bin\Debug\netcoreapp3.0\  </para>
            <para>e.g. C:\inetpub\wwwroot\bin\</para>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.RootServiceProvider">
            <summary>
            Gets or sets the root <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.HttpContextAccessor">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.HttpContext">
            <summary>
            Returns the HttpContext
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.HttpRequest">
            <summary>
            Returns the current HTTP request, if any, else null.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.IsRequestAvailable">
            <summary>
            Returns true if an HTTP Request is currently available
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.IsRequestBeingRedirected">
            <summary>
            Indicates whether the client is being redirected to a new location.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.Query">
            <summary>
            The query string as a collection of key-value pairs
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.HostEnvironment">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.Configuration">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.IsDevelopment">
            <summary>
            True when is development environment.
            </summary>
        </member>
        <member name="P:WebDesk.AspNet.WSys.LocalizeFunc">
            <summary>
            Delegate used by the Localize() method
            </summary>
        </member>
        <member name="T:WebDesk.DataStoreSettings">
            <summary>
            Application settings
            </summary>
        </member>
        <member name="P:WebDesk.DataStoreSettings.General">
            <summary>
            General settings
            </summary>
        </member>
        <member name="P:WebDesk.DataStoreSettings.Http">
            <summary>
            Http related settings
            </summary>
        </member>
        <member name="T:WebDesk.GeneralSettings">
            <summary>
            General settings
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.CultureCode">
            <summary>
            The default culture, i.e. el-GR
            <para>NOTE: This setting is assigned initially by default to any new visitor.</para>
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.CurrencyCode">
            <summary>
            Default currency code, e.g. EUR, USD, etc.
            <para>NOTE: This setting is assigned initially by default to any new visitor.</para>
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.CurrencySymbol">
            <summary>
            Returns the currency symbol. Used in formatting prices
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.MoneyFormat">
            <summary>
            Format string for formatting money values
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.DefaultCacheTimeoutMinutes">
            <summary>
            Default Cache retention policy, in minutes
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.UserCookieExpirationHours">
            <summary>
            How many hours to keep visitor cookie valid.
            <para> -1 = never expires, 0 = expire immediately, nnn = expire after nnn hours</para>
            </summary>
        </member>
        <member name="P:WebDesk.GeneralSettings.SuperUserPassword">
            <summary>
            Password for the super user
            </summary>
        </member>
        <member name="T:WebDesk.HttpSettings">
            <summary>
            Http related settings
            </summary>
        </member>
        <member name="M:WebDesk.HttpSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.HttpSettings.StaticFilesCacheControl">
            <summary>
            Gets or sets the value of the "Cache-Control" header value for static content.
            <para>Leave it empty or null, for no setting at all.</para>
            <para>SEE: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control </para>
            <para>SEE: https://docs.microsoft.com/en-us/aspnet/core/performance/caching/response </para>
            </summary>
        </member>
        <member name="T:WebDesk.ControllerApi">
            <summary>
            Web Api Controller.
            <para>CAUTION: This should be used for WebAPIs controllers only, not for AJAX controllers. </para>
            <para>Use the <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> as base class for AJAX controllers. Otherwise the ActionExceptionFilter will provide error results. </para>
            </summary>
        </member>
        <member name="P:WebDesk.ControllerApi.JwtRequestContext">
            <summary>
            The context regarding the current HTTP request (current visitor, selected warehouse, etc.)
            </summary>
        </member>
        <member name="M:WebDesk.ControllerApi.Json(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult" /> object that serializes the specified data object to JSON.
            </summary>
        </member>
        <member name="M:WebDesk.ControllerApi.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:WebDesk.ControllerMvc">
            <summary>
            Base MVC controller
            </summary>
        </member>
        <member name="P:WebDesk.ControllerMvc.UserContext">
            <summary>
            The context regarding the current HTTP request (current visitor, selected warehouse, etc.)
            </summary>
        </member>
        <member name="P:WebDesk.ControllerMvc.Cache">
            <summary>
            Returns the cache interface
            </summary>
        </member>
        <member name="M:WebDesk.ControllerMvc.HandleReturnUrl(System.String)">
            <summary>
            Handles the ReturnUrl parameter
            </summary>
        </member>
        <member name="M:WebDesk.ControllerMvc.ValidateModel(System.Object,System.Boolean,System.Func{System.Collections.Generic.Dictionary{System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry}})">
            <summary>
            Validates a model and returns the result.
            <para>Returns true if the specified model is ok and has no errors.</para>
            <para>Returns false if the specified model has errors, collects the error messages and creates the ErrorList entry in the ViewData.</para>
            </summary>
        </member>
        <member name="M:WebDesk.ControllerMvc.NotFoundInternal(System.String)">
            <summary>
            Returns the "not found" view
            </summary>
        </member>
        <member name="M:WebDesk.ControllerMvc.NotYetInternal(System.String)">
            <summary>
            Returns the "not yet" view
            </summary>
        </member>
        <member name="M:WebDesk.ControllerMvc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:WebDesk.DataLogListener">
            <summary>
            LogListener, saves log information to database
            </summary>
        </member>
        <member name="M:WebDesk.DataLogListener.ProcessLog(Tripous.Logging.LogInfo)">
             <summary>
             Called by the Logger to pass LogInfo to a log listener.
            <para>
             CAUTION: The Logger calls its Listeners asynchronously, that is from inside a thread.
             Thus Listeners should synchronize the ProcessLogInfo() call. Controls need to check if InvokeRequired.
             </para>
             </summary>
        </member>
        <member name="T:WebDesk.DataStoreResponse">
            <summary>
            Data store response
            </summary>
        </member>
        <member name="T:WebDesk.ItemResponse`1">
            <summary>
            Data service response for a single item
            </summary>
        </member>
        <member name="P:WebDesk.ItemResponse`1.Item">
            <summary>
            The item
            </summary>
        </member>
        <member name="T:WebDesk.ListResponse`1">
            <summary>
            Data service response for lists.
            </summary>
        </member>
        <member name="P:WebDesk.ListResponse`1.TotalItems">
            <summary>
            The number of total items when this is a paged response. Used only with paged responses.
            </summary>
        </member>
        <member name="P:WebDesk.ListResponse`1.List">
            <summary>
            The list of items
            </summary>
        </member>
        <member name="T:WebDesk.DataStore">
            <summary>
            Represents the database
            </summary>
            <summary>
            Represents the database
            </summary>
        </member>
        <member name="F:WebDesk.DataStore.EnLanguage">
            <summary>
            English language
            </summary>
        </member>
        <member name="F:WebDesk.DataStore.GrLanguage">
            <summary>
            Greek language
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.RegisterDbProviderFactories">
            <summary>
            Registers DbProviderFactory classes
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.ConnectDatabases">
            <summary>
            Loads database configuration settings.
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.CreateDatabases">
            <summary>
            Creates any non-existing creatable database.
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.ExecuteSchemas">
            <summary>
            Creates database tables etc. based on the registered schemas
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.Initialize(WebDesk.IWebAppContext)">
            <summary>
            Initializer
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.AddObjectMaps(System.Object)">
            <summary>
            Called by the system. 
            <para>Instructs plugin to add any object to object mappings may have by calling either:</para>
            <para><c>App.AddObjectMap(Type Source, Type Dest, bool TwoWay = false)</c></para>
            <para>or the passed in Configurator object which in the current implementantion is an AutoMapper.IMapperConfigurationExpression instance </para>
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.GetLanguages">
            <summary>
            Returns the list of languages this web-site supports
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.GetSettings">
            <summary>
            Returns the data-store settings
            <para>WARNING: do NOT use the cache with settings.</para>
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.GetRequestor(System.String)">
            <summary>
            Returns a user from database found under a specified Id, if any, else null.
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.ValidateRequestor(System.String,System.String)">
            <summary>
            Validates the specified credentials and returns a Visitor on success, else null.
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.Localize(System.String)">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and the culture of the current request, e.g. el-GR
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.Localize(System.String,System.String)">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and a culture code, e.g. el-GR
            </summary>
        </member>
        <member name="P:WebDesk.DataStore.Initialized">
            <summary>
            Returns true when initialized
            </summary>
        </member>
        <member name="P:WebDesk.DataStore.App">
            <summary>
            Represents the web application
            </summary>
        </member>
        <member name="P:WebDesk.DataStore.SqlStore">
            <summary>
            Returns the default sql store
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.GenerateRandomText(System.Int32)">
            <summary>
            Generates and returns a random text of a specified size.
            <para>Use it to generate Salt Keys for hashing passwords.</para>
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.GeneratePasswordHash(System.String,System.String,System.String)">
            <summary>
            Generates and returns a hash of a Password specified in clear text, using the SHA1 algorithm. 
            <para>It appends a specified SaltKey to the password first.</para>
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.ComputeHash(System.Byte[],System.String)">
            <summary>
            Computes the hash value of a specifed byte array
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.ValidatePassword(System.String,System.String,System.String)">
            <summary>
            Validates the password of a user/requestor
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.AddEnum(Tripous.Data.SchemaVersion,System.String,System.Boolean)">
            <summary>
            Creates an "enum" (integer look-up) table
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.AddEnum(Tripous.Data.SchemaVersion,System.String,System.Type,System.Boolean)">
            <summary>
            Creates an "enum" (integer look-up) table and INSERTs the EnumType values to it.
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.AddLookUp(Tripous.Data.SchemaVersion,System.String,System.Boolean)">
            <summary>
            Creates look-up table
            </summary>
        </member>
        <member name="M:WebDesk.DataStore.RegisterSchemas">
            <summary>
            Register database schemas
            </summary>
        </member>
        <member name="T:WebDesk.IClaimListProvider">
            <summary>
            Constructs a list of claims
            </summary>
        </member>
        <member name="M:WebDesk.IClaimListProvider.GetClaimList(System.String)">
            <summary>
            Creates and returns a claim list regarding this instance
            </summary>
        </member>
        <member name="T:WebDesk.IPlugin">
            <summary>
            A dynamically loadable external module.
            <para>NOTE: An external module is an assembly with a filename as ewm_FILE_NAME.dll. It uses ewm_ as a filename prefix. </para>
            </summary>
        </member>
        <member name="M:WebDesk.IPlugin.Initialize(WebDesk.IWebAppContext)">
            <summary>
            Called by the web site to initialize the plugin.
            </summary>
        </member>
        <member name="M:WebDesk.IPlugin.AddObjectMaps(System.Object)">
            <summary>
            Called by the system. 
            <para>Instructs plugin to add any object to object mappings may have by calling either:</para>
            <para><c>App.AddObjectMap(Type Source, Type Dest, bool TwoWay = false)</c></para>
            <para>or the passed in Configurator object which in the current implementantion is an AutoMapper.IMapperConfigurationExpression instance </para>
            </summary>
        </member>
        <member name="T:WebDesk.IWebAppContext">
            <summary>
            Represents the web application
            </summary>
        </member>
        <member name="M:WebDesk.IWebAppContext.GetService``1">
            <summary>
            Returns a service specified by a type argument. If the service is not registered an exception is thrown.
            </summary>
        </member>
        <member name="M:WebDesk.IWebAppContext.AddObjectMap(System.Type,System.Type,System.Boolean)">
            <summary>
            Adds a map between two types, from a source type to a destination type. A flag controls whether the mapping is a two-way one.
            <para>NOTE: Throws an exception if the ObjectMapper is already configured. </para>
            </summary>
        </member>
        <member name="M:WebDesk.IWebAppContext.Map``1(System.Object)">
            <summary>
            Creates and returns a destination object, based on a specified type argument, and maps a specified source object to destination object.
            </summary>
        </member>
        <member name="M:WebDesk.IWebAppContext.MapTo``2(``0,``1)">
            <summary>
            Maps a source to a destination object.
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.RootPath">
            <summary>
            The physical "root path", i.e. the root folder of the application
            <para> e.g. C:\MyApp</para>
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.WebRootPath">
            <summary>
            The physical "web root" path, i.e. the path to the "wwwroot" folder
            <para>e.g. C:\MyApp\wwwwroot</para>
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.ImagesPath">
            <summary>
            Returns the physical path of the images folder, i.e. C:\MyApp\wwwroot\images
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.Cache">
            <summary>
            Represents an application memory cache.
            </summary>
        </member>
        <member name="M:WebDesk.IWebAppContext.GetSettings">
            <summary>
            Returns the application settings
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.Culture">
            <summary>
            The <see cref="T:System.Globalization.CultureInfo"/> culture of the current request.
            <para>CAUTION: The culture of each HTTP Request is set by a lambda in ConfigureServices().
            This property here uses that setting to return its value.
            </para>
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.Language">
            <summary>
            The <see cref="P:WebDesk.IWebAppContext.Language"/> language of the current request.
            <para>CAUTION: The culture of each HTTP Request is set by a lambda in ConfigureServices().
            This property here uses that setting to return its value.
            </para>
            </summary>
        </member>
        <member name="P:WebDesk.IWebAppContext.DevMode">
            <summary>
            Returns true when HostEnvironment.IsDevelopment() returns true.
            </summary>
        </member>
        <member name="T:WebDesk.Lib">
            <summary>
            Represents this library
            </summary>
            <summary>
            Represents this library
            </summary>
        </member>
        <member name="F:WebDesk.Lib.EmptyValue">
            <summary>
            Constant. For required model string properties without a value.
            </summary>
        </member>
        <member name="F:WebDesk.Lib.PolicyAuthorizationDefault">
            <summary>
            Constant
            </summary>
        </member>
        <member name="F:WebDesk.Lib.PolicyAuthenticated">
            <summary>
            Constant
            </summary>
        </member>
        <member name="F:WebDesk.Lib.SPhoneRegex">
            <summary>
            Phone number validation regex
            </summary>
        </member>
        <member name="F:WebDesk.Lib.JwtAuthScheme">
            <summary>
            The name of the JWT authentication scheme
            </summary>
        </member>
        <member name="F:WebDesk.Lib.CookieAuthScheme">
            <summary>
            The name of the Cookie authentication scheme
            </summary>
        </member>
        <member name="F:WebDesk.Lib.DefaultCultureCode">
            <summary>
            The default culture code, e.g. en-US
            </summary>
        </member>
        <member name="M:WebDesk.Lib.Initialize(WebDesk.IWebAppContext)">
            <summary>
            Initializer
            </summary>
        </member>
        <member name="M:WebDesk.Lib.Error(System.String)">
            <summary>
            Throws an Exception
            </summary>
        </member>
        <member name="M:WebDesk.Lib.Error(System.String,System.Object[])">
            <summary>
            Throws an Exception
            </summary>
        </member>
        <member name="M:WebDesk.Lib.LogToFile(System.String,System.String)">
            <summary>
            Writes a specified text to a file and saves the file to the Log folder, i.e. AppData\Log.
            <para>The file is saved under a name containing a specified prefix and the current timestamp.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Executes an async method as a synchronous one
            </summary>
        </member>
        <member name="M:WebDesk.Lib.RunSync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an async method as a synchronous one
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GetSessionStringList(System.String)">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.List`1"/>    found under a specified key in session variables.
            </summary> 
        </member>
        <member name="M:WebDesk.Lib.AddToSuccessList(System.String)">
            <summary>
            Adds a message to SuccessList
            <para>NOTE: SuccessList and ErrorList messages are displayed to the user until lists are Pop()-ed.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.AddToErrorList(System.String)">
            <summary>
            Adds a message to ErrorList
            <para>NOTE: SuccessList and ErrorList messages are displayed to the user until lists are Pop()-ed.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.AddToErrorList(System.Collections.Generic.List{System.String})">
            <summary>
            Adds a list of messages to ErrorList
            <para>NOTE: SuccessList and ErrorList messages are displayed to the user until lists are Pop()-ed.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.PopSuccessList">
            <summary>
            Removes and returns the SuccessList.
            <para>NOTE: SuccessList and ErrorList messages are displayed to the user until lists are Pop()-ed.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.PopErrorList">
            <summary>
            Removes and returns the ErrorList.
            <para>NOTE: SuccessList and ErrorList messages are displayed to the user until lists are Pop()-ed.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GS(System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns a localized string based on a specified resource key, e.g. Customer, and the culture of the current request, e.g. el-GR
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GSL(System.String,System.Int32,System.Boolean)">
            <summary>
            GSL = GetString with maxLen.
            Returns the Value value as string. 
            <para>The string is returned truncated if exceeds MaxLen. </para>
            <para>If the Value is null or empty, Value is returned.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.FormatMoney(System.Decimal,System.Boolean,System.String)">
            <summary>
            Formats a decimal value as a currency value. No Currency Symbol prefix or suffix.
            </summary>
        </member>
        <member name="M:WebDesk.Lib.CreateSelectList">
            <summary>
            Creates and returns a list of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> items
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GetService``1">
            <summary>
            Returns a service specified by a type argument. If the service is not registered an exception is thrown.
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GetSettings">
            <summary>
            Returns the application settings
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebDesk.Lib.CreateHttpClient">
            <summary>
            Creates and returns a <see cref="T:System.Net.Http.HttpClient"/> using a <see cref="T:System.Net.Http.IHttpClientFactory"/>
            </summary>
        </member>
        <member name="M:WebDesk.Lib.GetViewDataDictionary(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Creates and returns a new ViewDataDictionary
            </summary>
        </member>
        <member name="M:WebDesk.Lib.IsApiRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Returns true if a request is a Web Api request
            </summary>
        </member>
        <member name="M:WebDesk.Lib.IsMvcRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Returns true if a request is an Mvc request
            </summary>
        </member>
        <member name="P:WebDesk.Lib.App">
            <summary>
            Represents the web application
            </summary>
        </member>
        <member name="P:WebDesk.Lib.HttpContext">
            <summary>
            Returns the <see cref="P:WebDesk.Lib.HttpContext"/>
            </summary>
        </member>
        <member name="P:WebDesk.Lib.Request">
            <summary>
            The http request
            </summary>
        </member>
        <member name="P:WebDesk.Lib.Query">
            <summary>
            The query string as a collection of key-value pairs
            </summary>
        </member>
        <member name="P:WebDesk.Lib.RequestContext">
            <summary>
            Returns the current request context (JWT or User/Cookie)
            </summary>
        </member>
        <member name="P:WebDesk.Lib.MoneyFormat">
            <summary>
            Format string for formatting money values
            </summary>
        </member>
        <member name="P:WebDesk.Lib.IsCookieAuthenticated">
            <summary>
            True when the user is authenticated with the cookie authentication scheme.
            </summary>
        </member>
        <member name="P:WebDesk.Lib.IsJwtAuthenticated">
            <summary>
            True when the user is authenticated with the JWT authentication scheme.
            </summary>
        </member>
        <member name="P:WebDesk.Lib.DevMode">
            <summary>
            Returns true when HostEnvironment.IsDevelopment() returns true.
            </summary>
        </member>
        <member name="T:WebDesk.Models.TradeType">
            <summary>
            Indicates the type of a trade
            </summary>
        </member>
        <member name="F:WebDesk.Models.TradeType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:WebDesk.Models.TradeType.SalesOrder">
            <summary>
            Sales Order
            </summary>
        </member>
        <member name="F:WebDesk.Models.TradeType.SalesInvoice">
            <summary>
            Sales Invoice
            </summary>
        </member>
        <member name="T:WebDesk.Picture">
            <summary>
            A picture of an item, i.e. product, etc.
            </summary>
        </member>
        <member name="P:WebDesk.Picture.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="P:WebDesk.Picture.DisplayOrder">
            <summary>
            Display order
            </summary>
        </member>
        <member name="P:WebDesk.Picture.PictureText">
            <summary>
            Base64 text of picture bytes
            </summary>
        </member>
        <member name="P:WebDesk.Picture.ImageUrl">
            <summary>
            Url of the image
            </summary>
        </member>
        <member name="T:WebDesk.Pictures">
            <summary>
            Helper
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.IsValidFileName(System.String)">
            <summary>
            Returns true if a specified file name is not null or empty and it just contains characters that are valid for a file name.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.ValidateFileName(System.String,System.String)">
            <summary>
            Validates and returns a file name, complete with a specified prefix.
            <para>NOTE: If the specified file name is not valid, it uses a random file name.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.ValidateFileName(System.String,System.String,System.String)">
            <summary>
            Validates and returns a file name, complete with a specified prefix and extension.
            <para>NOTE: If the specified file name is not valid, it uses a random file name.</para>
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.Exists(System.String,System.String)">
            <summary>
            Returns true if a picture with a specified filename exists in disk.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.FindImageUrl(System.String,System.String)">
            <summary>
            Returns the image url path of a file name ONLY if the file exists in Theme's image folder, else returns EMPTY string.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.Save(System.String,System.Drawing.Image,System.String)">
            <summary>
            Saves an image in Theme's image folder and returns the image url path.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.Save(System.String,System.String,System.String)">
            <summary>
            Saves a base64 string as an image in Theme's image folder and returns the image url path.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.Save(WebDesk.Picture,System.String)">
            <summary>
            Saves a base64 string as an image in Theme's image folder and returns the image url path.
            </summary>
        </member>
        <member name="M:WebDesk.Pictures.DefaultImageUrl(System.String)">
            <summary>
            Returns the path url of an image, e.g. ~/themes/THEME/Content/images/IMAGE.png
            </summary>
        </member>
        <member name="P:WebDesk.Pictures.ImagesPath">
            <summary>
            The full path where images are placed
            </summary>
        </member>
        <member name="P:WebDesk.Pictures.ImageUrlFunc">
            <summary>
            The function to construct a url to an image. Defaults to DefaultImageUrl() method
            </summary>
        </member>
        <member name="T:WebDesk.IRequestContext">
            <summary>
            Represents a context regarding the current HTTP request.
            <para>NOTE: Whatever information is intended to have the lifetime of the HTTP request should be added in this interface.</para>
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.HttpContext">
            <summary>
            The http context
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.Request">
            <summary>
            The http request
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.Query">
            <summary>
            The query string as a collection of key-value pairs
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.Language">
            <summary>
            The language of the current request
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.Requestor">
            <summary>
            The user or api client of the current request
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.Settings">
            <summary>
            Application settings
            </summary>
        </member>
        <member name="P:WebDesk.IRequestContext.IsAuthenticated">
            <summary>
            True when the request is authenticated.
            </summary>
        </member>
        <member name="T:WebDesk.IJwtRequestContext">
            <summary>
            A JWT request context (with JWT authentication)
            </summary>
        </member>
        <member name="T:WebDesk.IUserRequestContext">
            <summary>
            A user request context (with cookies authentication)
            </summary>
        </member>
        <member name="M:WebDesk.IUserRequestContext.SignInAsync(WebDesk.Requestor,System.Boolean,System.Boolean)">
            <summary>
            Sign-in. Authenticates a specified, already validated, Visitor
            </summary>
        </member>
        <member name="M:WebDesk.IUserRequestContext.SignOutAsync">
            <summary>
            Sign-out.
            </summary>
        </member>
        <member name="P:WebDesk.IUserRequestContext.IsImpersonation">
            <summary>
            True when the user has loged-in usin a SuperUserPassword
            </summary>
        </member>
        <member name="T:WebDesk.RequestContext">
            <summary>
            Represents a context regarding the current HTTP request.
            </summary>
        </member>
        <member name="F:WebDesk.RequestContext.fSettings">
            <summary>
            Field
            </summary>
        </member>
        <member name="M:WebDesk.RequestContext.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.HttpContext">
            <summary>
            The http context
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.Request">
            <summary>
            The http request
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.Query">
            <summary>
            The query string as a collection of key-value pairs
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.Language">
            <summary>
            The language of the current request
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.Requestor">
            <summary>
            The user or api client of the current request
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.IsAuthenticated">
            <summary>
            True when the request is authenticated.
            </summary>
        </member>
        <member name="P:WebDesk.RequestContext.Settings">
            <summary>
            DataStore settings 
            </summary>
        </member>
        <member name="T:WebDesk.Requestor">
            <summary>
            Represents the user or api client of a request
            </summary>
        </member>
        <member name="F:WebDesk.Requestor.SUserLevelClaimType">
            <summary>
            A claim type for a private claim. 
            Designates the level of a user, i.e. Admin, User, Guest, Service, etc.
            </summary>
        </member>
        <member name="F:WebDesk.Requestor.SAuthenticationSchemeClaimType">
            <summary>
            A claim type for a private claim.
            Designates the scheme used in authentication, i.e. Cookies, JWT, etc.
            </summary>
        </member>
        <member name="F:WebDesk.Requestor.SCultureClaimType">
            <summary>
            A claim type for a private claim. 
            Designates the culture code to be used for subsequent calls, e.g. en-US
            </summary>
        </member>
        <member name="M:WebDesk.Requestor.GetClaimList(System.String)">
            <summary>
            Creates and returns a claim list regarding this instance
            </summary>
        </member>
        <member name="P:WebDesk.Requestor.Id">
            <summary>
            Required. Database Id
            </summary>
        </member>
        <member name="P:WebDesk.Requestor.Level">
            <summary>
            The level of a user, i.e. Guest, Admin, User, etc.
            </summary>
        </member>
        <member name="P:WebDesk.Requestor.UserId">
            <summary>
            Required. Email or User name or something
            </summary> 
        </member>
        <member name="P:WebDesk.Requestor.Name">
            <summary>
            Optional. The requestor name
            </summary> 
        </member>
        <member name="P:WebDesk.Requestor.Email">
            <summary>
            Optional. The requestor email
            </summary> 
        </member>
        <member name="P:WebDesk.Requestor.IsBlocked">
            <summary>
            True when requestor is blocked by admins
            </summary>
        </member>
        <member name="T:WebDesk.WebAppException">
            <summary>
            Exception class to be used by this application
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebDesk.WebAppException.#ctor(System.String,System.Net.HttpStatusCode,System.Exception)">
            <summary>
            Constructor
            </summary>
        </member>
    </members>
</doc>
