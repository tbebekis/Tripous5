@{
    ViewBag.Title = "Simple Binding";
}
 
<partial name="~/Demos/Shared/_Index.cshtml" />
<h2>@ViewBag.Title</h2>


<hr />
<div>
    <p>This page uses the <code>tp.CreateContainerControls()</code> to create the various controls in the page.</p>
    <p>Also, controls can be created "at once" when the page contains a container element, such as a DIV or even the BODY itself, with "Page" as the id value. 
    In that case a <code>tp.Page</code> object is created automatically by Tripous script, and then the <code>tp.Page</code> creates all page controls. </p>
    <p><strong>NOTE: </strong> There must be only one <code>tp.Page</code> per page.</p>
    <p>Automatic control creation per container element can also be achieved using the <code>tp.View</code> object. A page may contain many <code>tp.View</code> objects. </p>
</div>
<hr />
<br />

<div>

    <div>
        <button id="First" onclick="Move(1)">First</button>  
        <button id="Prior" onclick="Move(2)">Prior</button>  
        <button id="Next" onclick="Move(3)">Next</button>   
        <button id="Last" onclick="Move(4)">Last</button>  
    </div>
    <br />

    <div id="log"></div>
    <br />

    <div class="tp-Row  tp-Ctrls lc-75 mc-70 sc-70 ">
        <div class="tp-Col l-33 m-50">
            <div class="tp-CtrlRow" data-setup="{Text: 'Id', Control: { TypeName: 'TextBox', Id: 'Id', DataField: 'Id', ReadOnly: true } }"></div>
            <div class="tp-CtrlRow" data-setup="{Text: 'Name', Control: { TypeName: 'TextBox', Id: 'Name', DataField: 'Name' } }"></div>
            <div class="tp-CtrlRow" data-setup="{Text: 'Date', Control: { TypeName: 'DateBox', Id: 'Date', DataField: 'Date' } }"></div>
            <div class="tp-CheckBoxRow" data-setup="{Text: 'Όπως έχουμε γράψει ξανά, ολοφάνερα η συντριπτικά ισχυρότερη στρατηγική δύναμη του πλανήτη, οι ΗΠΑ, αναβιώνει υπό μια νέα εκδοχή το δόγμα Νίξον. Οι προεκτάσεις για την Ελλάδα είναι βαθύτατες και τα γεγονότα συντελούνται σε παρόντα χρόνο. Ένα είναι σίγουρο.', Control: { TypeName: 'CheckBox', Id: 'Flag', DataField: 'Flag' } }"></div>
            <div class="tp-CtrlRow" data-setup="{Text: 'Memo', Control: { TypeName: 'Memo', Id: 'Memo', DataField: 'Memo', Height: 150 } }"></div>
        </div>
    </div>

</div>



<script>
 
    var Table,
        DS,
        edtId,
        edtName,
        edtDate,
        chFlag,
        edtMemo;

    function CreateTable() {
        var Table = new tp.DataTable();

        Table.AddColumn('Id', tp.DataType.Integer);
        Table.AddColumn('Name', tp.DataType.String, 20);
        Table.AddColumn('Date', tp.DataType.Date);
        Table.AddColumn('Flag', tp.DataType.Boolean);
        Table.AddColumn('Memo', tp.DataType.Memo);

        var Flag;
        for (var i = 0, ln = 10; i < ln; i++) {
            Flag = (i + 1) % 2 == 0;
            Table.AddRow(i, 'Name ' + i, tp.AddDays(tp.Today(), i + 1), Flag, 'memo text');
        }

        return Table;
    }

    function Move(v) {
        switch (v) {
            case 1: DS.First(); break;
            case 2: DS.Prior(); break;
            case 3: DS.Next(); break;
            case 4: DS.Last(); break;
        }
    }

    function DataSource_OnPositionChanged() {
        tp.Enabled('#First', DS.IsFirst === false);
        tp.Enabled('#Prior', DS.IsFirst === false);
        tp.Enabled('#Next', DS.IsLast === false);
        tp.Enabled('#Last', DS.IsLast === false);
    }

    tp.Ready(function () {

        tp.CreateContainerControls();

        Table = CreateTable();
        DS = new tp.DataSource(Table);

        edtId = tp.FindControlById('Id');
        edtName = tp.FindControlById('Name');
        edtDate = tp.FindControlById('Date');
        chFlag = tp.FindControlById('Flag');
        edtMemo = tp.FindControlById('Memo');

        edtId.DataSource = DS;
        edtName.DataSource = DS;
        edtDate.DataSource = DS;
        chFlag.DataSource = DS;
        edtMemo.DataSource = DS;

        DS.On('PositionChanged', DataSource_OnPositionChanged);

        DataSource_OnPositionChanged();
    });






</script>

