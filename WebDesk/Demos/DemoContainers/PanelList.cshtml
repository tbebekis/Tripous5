@{
    ViewBag.Title = "PanelList";
}

<partial name="~/Demos/Shared/_Index.cshtml" />
<h2>@ViewBag.Title</h2>

<div>
    <p>
        A list of panels. Only one panel is visible at the same time. <br />
        An Associate object, one that provides a SelectedIndexChanged event and a SelectedIndex property, can automatically control the selected panel of this panel list. <br />
        The Associate object can be passed in CreateParams or in the declarative (markup) create params of the data-setup attribute. <br />
    </p>
</div>

<br />

<div>
    <button id="btn1" onclick="AddChild()">AddChild</button> <br />
</div>

<br />

<select id="ListBox" size="10">
</select>

<br />

<div class="html-code">
    <div id="PanelList" data-setup="{ Associate: '#ListBox', SelectedIndex: 0 }">
        <div>Panel 1</div>
        <div>Panel 2</div>
        <div>Panel 3</div>
    </div>
</div>


<script class="js-code">
    // a totally custom Associate object, build upon a select element.
    // A tp.ListBox can be used instead, or any other tp class providing a SelectedIndexChanged event.
    var PanelListAssociate = class extends tp.Component {
        constructor(ElementOrSelector, CreateParams) {
            super(ElementOrSelector, CreateParams);
        }

        get SelectedIndex() {
            return this.fSelectedIndex;
        }

        set SelectedIndex(v) {
            if (tp.IsNumber(v) && v !== this.SelectedIndex) {
                this.fSelectedIndex = v;
                this.Trigger("SelectedIndexChanged");
            }
        }

        AddListItem(Text) {
            var option = this.Document.createElement("option");
            option.text = Text;
            this.Handle.add(option); 
        } 
 
        OnHandleCreated() {
            super.OnHandleCreated();
            this.HookEvent(tp.Events.Change);
        }

       OnAnyDOMEvent(e) {
            var Type = tp.Events.ToTripous(e.type);

           if (tp.Events.Change === Type) {
               this.SelectedIndex = parseInt(this.Handle.selectedIndex, 10);
            }

            super.OnAnyDOMEvent(e);
        }
 
    }
    PanelListAssociate.prototype.fSelectedIndex = -1;


    var lbo = null;
    var ctrl = null;

    // a function for adding a child
    function AddChild() {
        var child = ctrl.AddChild();
        var S = 'Panel ' + ctrl.Count;
        child.innerHTML = S;

        lbo.AddListItem(S);
    }

    // create the panel list control
    tp.Ready(function () {
        lbo = new PanelListAssociate('#ListBox');
        lbo.Height = 160;

        ctrl = new tp.PanelList('#PanelList');       
 
        for (var i = 0, ln = ctrl.Count; i < ln; i++) {     
            lbo.AddListItem('Panel ' + (i + 1));
        }         
    });
 
</script>

 
 